#~~~~~~~~~~ UTILS: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# F1: CoolWrite define colors:
    function coolWrite{
    <#
    .SYNOPSIS
        Sets color schemes for Write-host outputs.
    .DESCRIPTION
        Uses the schemes defined in begin{}
    .PARAMETER color
        color of background. The text coolor is always white except when the backgroud is yellow (text = blue).
    .PARAMETER Message
        The Text to be colored  
    .EXAMPLE
        coolwrite -color Red -Message "Hi, This text will be with Red BG"
    .NOTES
        Author: Ratan Mohapatra
        Last Update: March 10, 2019
    #>
        [CmdletBinding()]
        param(
            [ValidateSet('Cyan','Green','Red','Yellow')][string]$color,
            [string]$Message
            )
        begin{
            $scheme =$null
            $capred = @{BackgroundColor = "Red"; ForegroundColor = "white"}
            $capcyan = @{BackgroundColor = "Cyan"; ForegroundColor = "white"}
            $capgreen = @{BackgroundColor = "Green"; ForegroundColor = "white"}
            $capYellow = @{BackgroundColor = "Yellow"; ForegroundColor = "Blue"}         
            }
        process{
            try{
                switch($color){
                    'red'{$scheme = $capred}
                    'green'{$scheme = $capgreen}
                    'cyan' {$scheme =  $capcyan}
                    'yellow' {$scheme =  $capYellow}
                    }
                Write-Host @scheme "`n$Message"
                            $Message = $null       
                }
            catch{Write-Error "$($_.Exception.Message) - Line Number: $($_.InvocationInfo.ScriptLineNumber)"}
            finally{}        
           }
            end{}
        }

# F2. Create an output folder if not there:
    function makeFolder{
    <#
    .SYNOPSIS
        Create a folder.
    .DESCRIPTION
        Creates a folder if it does not exist.
    .PARAMETER FolderPath
        full path e.g., c:\myshare\output
    .EXAMPLE
        makeFolder -FolderPath c:\myshare
    .NOTES
        Author: Ratan Mohapatra
        Last Update: March 10, 2019

    #>
        [CmdletBinding()]
        param( [string]$FolderPath )
        begin{$itemType = "directory"}
        process{
            try{
                if (!(Test-Path $FolderPath)){
                    new-item -Path $FolderPath -ItemType $itemType -Force
                    return $true
                    }
                }
            catch{
                Write-Error "$($_.Exception.Message) - Line Number: $($_.InvocationInfo.ScriptLineNumber)"
                return $false
                }
                }
        end{}
        }
        
# F3. Write to output File:
    function write2File(){
    <#
    .SYNOPSIS
        Write data to a text file.
    .DESCRIPTION
        Appends data to a log file.
    .PARAMETER FilePath
        Complete file path.
    .PARAMETER HeaderCaption
        Header for each section of output data.
    .PARAMETER WriteText
        Text to be written.
    .EXAMPLE
        write2File -FilePath $env:userprofile\desktop\output.txt -HeaderCaption "Active Directory User Account Data" -WriteText $res
    .NOTES
        Author: Ratan Mohapatra
        Last Update: March 10, 2019
    #>
        [CmdletBinding()]
        param(
            [string]$FilePath,
            [string]$HeaderCaption,
            [string]$WriteText
            )
        process{
            try{
                if(Test-Path $FilePath){
                    $HeaderCaption | out-file $FilePath -Append
                    $WriteText | Out-File -FilePath $FilePath -Append     
                    }
                return "Witten to the Output file!"
                }
            catch{
                Write-Error "$($_.Exception.Message) - Line Number: $($_.InvocationInfo.ScriptLineNumber)"
                return
                }
            }
        }

# F4. Check user string to see if Email address:
    function CheckUserString{
    <#
    .SYNOPSIS
        Checks a String for email and extracts the SamAccoutName
        LASTUPDATE: Dec 10 2018
        .AUTHOR: Ratan Mohapatra
    .PARAMETER $usrIDString
        The user ID string in username or Email Format
    #>
        [CmdletBinding()]
        param( [string]$usrIDString )
        process{
            try{
                if(!(([regex]::match($usrIDString,"@")).success)){
                    return @($usrIDString,'0')
                    }
                else{
                    $usrIDArray = $usrIDString.Split('@')
                    return $usrIDArray
                    }                      
                }
            catch{Write-Error "$($_.Exception.Message) - Line Number: $($_.InvocationInfo.ScriptLineNumber)"}         
           }
        }
